<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Kiosk Screensaver</title>
    <style>
      html, body {
        margin: 0; padding: 0;
        width: 100%; height: 100%;
        overflow: hidden; background: black;
      }
    </style>
  </head>
  <body>
    <div id="screensaver" class="fixed inset-0">
      <% if @slides.any? %>
        <img
          id="screensaver-image"
          style="position:absolute; top:0; left:0; width:100%; height:100%; object-fit:cover;"
        />
      <% else %>
        <div style="display:flex; align-items:center; justify-content:center; width:100%; height:100%;">
          <p style="color:white; font-size:24px;">No slides scheduled.</p>
        </div>
      <% end %>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const EXIT_URL         = "<%= j @exit_url %>";
        const REFRESH_INTERVAL = 30 * 60 * 1000; // 30 minutes

        // Build initial slide list
        let slides = <%= raw(@slide_data.to_json) %>;

        if (!slides.length) return;

        // Shuffle helper
        function shuffle() {
          for (let i = slides.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [slides[i], slides[j]] = [slides[j], slides[i]];
          }
        }

        let idx = 0;
        const img = document.getElementById("screensaver-image");

        function showCurrentSlide() {
          img.src = slides[idx].url;
          img.alt = slides[idx].title || "";
        }

        function nextSlide() {
          idx = (idx + 1) % slides.length;
          showCurrentSlide();
          schedule();
        }

        function schedule() {
          clearTimeout(window._timer);
          window._timer = setTimeout(
            nextSlide,
            slides[idx].duration * 1000
          );
        }

        // Exit handlers: click, mousemove, keydown (after 2s)
        function exit() { window.location = EXIT_URL; }
        setTimeout(() => {
          document.addEventListener("click",     exit, { once: true });
          document.addEventListener("mousemove", exit, { once: true });
          document.addEventListener("keydown",   exit, { once: true });
        }, 2000);

        // Start slideshow
        shuffle();
        showCurrentSlide();
        schedule();

        // Periodic JSON refresh
        setInterval(async () => {
          try {
            const res = await fetch(`/slides.json?kiosk=<%= j params[:kiosk] %>`);
            if (!res.ok) throw new Error(res.statusText);
            const { slides: updated } = await res.json();
            if (Array.isArray(updated) && updated.length) {
              slides = updated;
              shuffle();
              idx = 0;
              showCurrentSlide();
              schedule();
            }
          } catch (e) {
            console.error("Slide refresh failed:", e);
          }
        }, REFRESH_INTERVAL);
      });
    </script>
  </body>
</html>
